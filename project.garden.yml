kind: Project
name: flask-cockroachdb-example
defaultEnvironment: dev
variables:
  username: worldofgeese
  terraformInitRoot: "./terraform/"

environments:
  - name: dev
    defaultNamespace: flask-cockroachdb-example-${variables.username}
    variables:
      hostname: dev.worldofgeese.devrel.demo.garden
  - name: prod
    defaultNamespace: flask-cockroachdb-example
    production: true
    variables:
      hostname: worldofgeese.devrel.demo.garden

providers:
  - name: terraform
    autoApply: "${environment.name == 'dev' ? true : false}" # <--- We only recommend using `autoApply` for private development environments, since otherwise you may accidentally apply hazardous changes, or conflict with other users of an environment.
    # This must be set to indicate that there is a stack in the folder named terraform.
    initRoot: "${var.terraformInitRoot}"
    allowDestroy: true
    # You can either uncomment and replace these with your own values, or provide the values in a
    # terraform.tfvars file in the project root.
    variables:
      project_id: devrel-348008
      region: europe-north1

  - name: kubernetes
    context: ${providers.terraform.outputs.cluster_name}
    kubeconfig: ${var.terraformInitRoot}/${providers.terraform.outputs.kubeconfig_path}
    namespace: ${environment.namespace}
    defaultHostname: dev.worldofgeese.devrel.demo.garden
    deploymentRegistry:
      hostname: europe-north1-docker.pkg.dev
      namespace: devrel-348008/worldofgeese-repo
    imagePullSecrets:
      - name: regcred
        namespace: default

  - name: pulumi
    version: null # Set to `null` to use whichever version of `pulumi` is on your PATH.
       
